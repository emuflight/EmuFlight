name: Build EgoFlight

on: [push, pull_request]

env:
  CCACHE_VERSION: '3.7.7'
  CCACHE_BASEDIR: "$GITHUB_WORKSPACE"
  CCACHE_DIR: "$CCACHE_BASEDIR/.ccache"
  CCACHE_COMPRESS: "true"
  CCACHE_COMPRESSLEVEL: 6
  CCACHE_MAXSIZE: '500M'

jobs:
  build:
    strategy:
      max-parallel: 1
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Version
      id: get_version
      run: echo "::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}"

    - name: Setup ccache
      id: ccache
      run: |
        mkdir -p bin
        curl -SsL https://github.com/cristianadam/ccache/releases/download/v$CCACHE_VERSION/${{ runner.os }}.tar.xz -o ccache.tar.xz
        tar xvf ./ccache.tar.xz -C bin

    - name: Setup Python
      uses: actions/setup-python@v1

    - name: Toolchain
      uses: fiam/arm-none-eabi-gcc@v1
      with:
        release: '9-2019-q4' # The arm-none-eabi-gcc release to use.

    - name: Cache
      uses: actions/cache@v1
      with:
        path:
          - .ccache
          - tools
          - downloads
        key: "cache-$VERSION"
        restore-keys: |
          cache-

    - name: Cleanup
      run: |
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo apt clean
        docker rmi -f $(docker image ls -aq)
        sync
        df -h

    - name: Make
      run: |
        echo "::add-path::./bin"
        make all

    - name: Artifacts
      uses: actions/upload-artifact@v2-preview
      with:
        name: EgoFlight-${{ steps.get_version.outputs.VERSION }}-${{ github.run_number }}
        path: obj/*.hex
      continue-on-error: true

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        draft: true
        files: obj/*.hex
      env:
        GITHUB_TOKEN: ${{ secrets.tokkken }}
